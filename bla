    /*
    cout << eV << " " << s->g->eps0 << " " << s->g->eps << " ";
    cout << dot(r,EHnt.first) << " " <<  dot(r,EHnl.first) << " " <<  dot(r,EHpt.first) << " " << dot(r,EHpl.first) << " ";
    cout << dot(r,(EHnt.first-EHnt2.first)*dri) << " " <<  dot(r,(EHnl.first-EHnl2.first)*dri) << " " <<  dot(r,(EHpt.first-EHpt2.first)*dri) << " " << dot(r,(EHpl.first-EHpl2.first)*dri) << "\n";
    */
    
    //cout << eV << " " << sigma << "\n";

    //cout << eV << "\n";

  ComplexVector3 E1 = I * g->k * (plane->n * M);
  Complex f0 = dot(E, plane->E0) / dot(plane->E0,plane->E0);
  Complex f1 = dot(E1, plane->E0) / dot(plane->E0,plane->E0);
  Complex sigma = (f0) / g->normk;
  Complex sigma1 = (f1) / g->normk;

  ComplexVector3 H = I * g->omega * g->eps * (plane->n * M) * plane->n - I * g->k * (plane->n * J);
  Complex g0 = dot(H, plane->H0) / dot(plane->H0,plane->H0);
  Complex tau = (g0) / g->normk;

  cerr << "J, M = " << J << "\n" << M << "\n";
  cerr << "J0, M0 = " << J0 << ", " << M0 << "\n";
  cerr << "sigma, sigma1, tau = " << sigma << " " << sigma1 << " " << tau << "\n";
