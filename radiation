
    ComplexDenseMatrix *W = Zts(&rwgTree,&rwgTree,&greenExt,options);
    printf("1\n");
    ComplexDenseMatrix G0(2*s->rwgs,2*s->rwgs);

    ComplexDenseMatrix *G1 = Zts(s,s,s->g,options);
    ComplexDenseMatrix *G2 = Zts(t,t,t->g,options);
    for(int i=0; i<2*s->rwgs;i++)
      for(int j=0; j<2*s->rwgs;j++) {
        G0(i,j) = (*W)(i,j);
        (*W)(i,j) += (*G1)(i,j);
      }
    int i0 = 2*s->rwgs;
    for(int i=0; i<2*t->rwgs;i++)
      for(int j=0; j<2*t->rwgs;j++)
        (*W)(i0+i,i0+j) += (*G2)(i,j);

    delete G2;

    inverse(*W);
    printf("2\n");
    ComplexDenseMatrix W1(*W,0,0,2*s->rwgs,2*s->rwgs);
    symm(*G1);
    ComplexDenseMatrix B1 = *G1 * W1;
    //B1.resize(0,0,2*s->rwgs,2*s->rwgs);
    delete G1;

    symm(G0);
    ComplexDenseMatrix W2(*W,0,0,2*s->rwgs,2*s->rwgs);
    ComplexDenseMatrix B2 = W2 * G0;
    //B2.resize(0,0,2*s->rwgs,2*s->rwgs);

    multiply_Adagger_B(B2,B1,*W);

    Complex S = 0.25*trace(*W);
